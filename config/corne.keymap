/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt { flavor = "balanced"; };

&lt { flavor = "balanced"; };

/ {
    combos {
        compatible = "zmk,combos";

        Escape {
            bindings = <&kp ESC>;
            key-positions = <16 19>;
        };
    };

    macros {
        window_up: window_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(C_AC_NEXT_KEYBOARD_LAYOUT_SELECT) &kp UP_ARROW>;
            label = "WINDOW_UP";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colmak {
            bindings = <
&none  &kp Q             &kp W  &kp F               &kp P               &kp B                   &kp J                      &kp L               &kp U            &kp Y    &kp SEMI   &none
&none  &mt LEFT_SHIFT A  &kp R  &mt LEFT_CONTROL S  &mt LEFT_COMMAND T  &mt LEFT_ALT G          &mt LEFT_ALT M             &mt LEFT_COMMAND N  &mt RCTRL E      &kp I    &kp O      &none
&none  &kp Z             &kp X  &kp C               &kp D               &kp V                   &kp K                      &kp H               &kp COMMA        &kp DOT  &kp SLASH  &none
                                &kp LS(LA(SPACE))   &lt 1 ENTER         &mt LEFT_CONTROL TAB    &mt RIGHT_SHIFT BACKSPACE  &lt 2 SPACE         &lt 0 RG(GRAVE)
            >;
        };

        sym+numpad {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp EXCL            &kp AT            &kp POUND          &kp DLLR              &kp PRCNT                &kp N7  &kp N8        &kp N9  &mt PLUS EQUAL   &mt UNDER MINUS  &none
&none  &kp CARET           &kp AMPERSAND     &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp N4  &kp N5        &kp N6  &kp ASTERISK     &kp SLASH        &none
&none  &mt PIPE BACKSLASH  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE        &kp RIGHT_BRACE          &kp N1  &kp N2        &kp N3  &mt TILDE GRAVE  &kp CAPS         &none
                                             &trans             &trans                &trans                   &trans  &kp NUMBER_0  &trans
            >;
        };

        sys+brackets {
            bindings = <
&trans  &kp ESCAPE   &mt PLUS EQUAL  &mt UNDERSCORE MINUS    &kp LEFT_PARENTHESIS           &kp RIGHT_PARENTHESIS         &kp C_PREV        &kp C_PP              &kp C_NEXT         &trans           &bt BT_NXT             &trans
&trans  &trans       &kp ASTERISK    &mt LEFT_CONTROL SLASH  &mt LEFT_COMMAND LEFT_BRACKET  &mt LEFT_ALT RIGHT_BRACKET    &kp LEFT_ARROW    &kp DOWN_ARROW        &kp UP_ARROW       &kp RIGHT_ARROW  &mt DOUBLE_QUOTES SQT  &trans
&trans  &bootloader  &kp GRAVE       &kp CAPS                &kp LEFT_BRACE                 &kp RIGHT_BRACE               &kp LA(LG(DOWN))  &kp LA(LG(UP_ARROW))  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &bt BT_CLR             &trans
                                     &trans                  &kp K_MUTE                     &trans                        &trans            &trans                &trans
            >;
        };
    };
};
